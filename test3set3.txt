create table station(Station_ID int,CITY varchar(10),STATE varchar(3),LAT_N int,LONG_W int);

insert into station values(13,'Phoenix','AZ',33,112);
insert into station values(44,'Denver','CO',40,105);
insert into station values(66,'Caribou','ME',47,68);

create table stats(Stats_ID int,MONTH int,YEAR int,TEMP_FARENHEIT double,RAIN_INCH double);
insert into stats values(13,1,2010,57.4,0.31);
insert into stats values(13,5,2010,91.7,5.15);
insert into stats values(13,12,2010,12.6,8.34);
insert into stats values(13,9,2010,100.3,10.34);
insert into stats values(44,9,2010,27.2,3.45);
insert into stats values(44,2,2010,27.3,0.18);
insert into stats values(44,6,2010,74.8,2.11);
insert into stats values(66,3,2010,6.7,2.1);
insert into stats values(66,7,2010,65.8,4.52);
 
mysql> select * from station;
+------------+---------+-------+-------+--------+
| Station_ID | CITY    | STATE | LAT_N | LONG_W |
+------------+---------+-------+-------+--------+
|         13 | Phoenix | AZ    |    33 |    112 |
|         44 | Denver  | CO    |    40 |    105 |
|         66 | Caribou | ME    |    47 |     68 |
+------------+---------+-------+-------+--------+
3 rows in set (0.03 sec)
ysql> select * from stats;
+----------+-------+------+----------------+-----------+
| Stats_ID | MONTH | YEAR | TEMP_FARENHEIT | RAIN_INCH |
+----------+-------+------+----------------+-----------+
|       13 |     1 | 2010 |           57.4 |      0.31 |
|       13 |     5 | 2010 |           91.7 |      5.15 |
|       13 |    12 | 2010 |           12.6 |      8.34 |
|       13 |     9 | 2010 |          100.3 |     10.34 |
|       44 |     9 | 2010 |           27.2 |      3.45 |
|       44 |     2 | 2010 |           27.3 |      0.18 |
|       44 |     6 | 2010 |           74.8 |      2.11 |
|       66 |     3 | 2010 |            6.7 |       2.1 |
|       66 |     7 | 2010 |           65.8 |      4.52 |
+----------+-------+------+----------------+-----------+
9 rows in set (0.00 sec)

Inch -> Centimeters	Rain_Inch * 03937
F to Celcius->	(Farenheit -32)*5/9


1	Fetch rows which have hottest month per city with highest rainfall
select stats_id,city,state,month,year,temp_farenheit,rain_inch from station s join
(select stats_id,month,year,temp_farenheit,rain_inch,dense_rank() over 
(partition by stats_id order by temp_farenheit desc,rain_inch desc) ran from stats)temprain on s.station_id=temprain.stats_id where ran=1;

mysql> select stats_id,city,state,month,year,temp_farenheit,rain_inch from station s join
    -> (select stats_id,month,year,temp_farenheit,rain_inch,dense_rank() over
    -> (partition by stats_id order by temp_farenheit desc,rain_inch desc) ran from stats)temprain on s.station_id=temprain.stats_id where ran=1;
+----------+---------+-------+-------+------+----------------+-----------+
| stats_id | city    | state | month | year | temp_farenheit | rain_inch |
+----------+---------+-------+-------+------+----------------+-----------+
|       13 | Phoenix | AZ    |     9 | 2010 |          100.3 |     10.34 |
|       44 | Denver  | CO    |     6 | 2010 |           74.8 |      2.11 |
|       66 | Caribou | ME    |     7 | 2010 |           65.8 |      4.52 |
+----------+---------+-------+-------+------+----------------+-----------+
3 rows in set (0.00 sec)

2	Fetch and display rows with Station_ID, City, State, Month, Year and temp(in Celcius), rainfall (in cm)

 select stats_id,city,state,month,year,format(((temp_farenheit-32)*5/9),2) temperature,format((rain_inch*03937),2) rainfall from stats join station on stats_id=station_id;
 
 mysql>  select stats_id,city,state,month,year,format(((temp_farenheit-32)*5/9),2) temperature,format((rain_inch*03937),2) rainfall from stats join station on stats_id=station_id;
+----------+---------+-------+-------+------+-------------+-----------+
| stats_id | city    | state | month | year | temperature | rainfall  |
+----------+---------+-------+-------+------+-------------+-----------+
|       13 | Phoenix | AZ    |     1 | 2010 | 14.11       | 1,220.47  |
|       13 | Phoenix | AZ    |     5 | 2010 | 33.17       | 20,275.55 |
|       13 | Phoenix | AZ    |    12 | 2010 | -10.78      | 32,834.58 |
|       13 | Phoenix | AZ    |     9 | 2010 | 37.94       | 40,708.58 |
|       44 | Denver  | CO    |     9 | 2010 | -2.67       | 13,582.65 |
|       44 | Denver  | CO    |     2 | 2010 | -2.61       | 708.66    |
|       44 | Denver  | CO    |     6 | 2010 | 23.78       | 8,307.07  |
|       66 | Caribou | ME    |     3 | 2010 | -14.06      | 8,267.70  |
|       66 | Caribou | ME    |     7 | 2010 | 18.78       | 17,795.24 |
+----------+---------+-------+-------+------+-------------+-----------+
9 rows in set (0.06 sec)
 
3	Display all rows for states on all quarters. If a state do not have any quarter information,
 default Temp in Celcius and rain in cms based on average for the year
 
 select stats_id,month,year,format(((temp_farenheit-32)*5/9),2) temperature,format((rain_inch*03937),2) rainfall,
 dense_rank() over (partition by stats_id order by month) ran from stats;

select stats_id,month,year,format(((temp_farenheit-32)*5/9),2) temperature,format((rain_inch*03937),2) rainfall,
case when month in(1,2,3) then 'Q1'
when month in(4,5,6) then 'Q2'
when month in(7,8,9) then 'Q3'
when month in (10,11,12) then 'Q4' end as quarter from stats;


select stats_id,month,year,qua1,m2,qua2,m3,qua3,m4,qua4 from (
select stats_id,month,year,qua1,m2,qua2,m3,qua3,m4,qua4,row_number() over (order by stats_id) rown from (
select stats_id,month,year,temperature qua1,lead(temperature,1) over (partition by stats_id order by month) qua2,
lead(month,1) over (partition by stats_id order by month) m2,
lead(temperature,2) over (partition by stats_id order by month) qua3,
lead(month,2) over (partition by stats_id order by month) m3,
lead(temperature,3) over (partition by stats_id order by month) qua4,
lead(month,3) over (partition by stats_id order by month) m4,
row_number() over (partition by stats_id order by month) rn
 from(
select stats_id,month,year,format(((temp_farenheit-32)*5/9),2) temperature from stats)a)b where rn=1
)c where rown=1;
 
 mysql> select *,dense_rank() over (order by stats_id) sis,
 dense_rank() over (partition by stats_id order by month) mon,
 avg(temp_farenheit) over (partition by stats_id) avgtemp,
 avg(rain_inch) over (partition by stats_id) avgrain from stats;
 
 
 select *,dense_rank() over (order by stats_id,month) sis,
 case when month in (1,2,3) then 'Q1'
 when month in(4,5,6) then 'Q2'
 when month in (7,8,9) then 'Q3'
 when month in (10,11,12) then 'Q4' end as qua,
 avg(temp_farenheit) over (partition by stats_id) avgtemp,
 avg(rain_inch) over (partition by stats_id) avgrain from stats;
 
 
 
+----------+-------+------+----------------+-----------+-----+-----+---------+--------------------+
| Stats_ID | MONTH | YEAR | TEMP_FARENHEIT | RAIN_INCH | sis | mon | avgtemp | avgrain            |
+----------+-------+------+----------------+-----------+-----+-----+---------+--------------------+
|       13 |     1 | 2010 |           57.4 |      0.31 |   1 |   1 |    65.5 |              6.035 |
|       13 |     5 | 2010 |           91.7 |      5.15 |   1 |   2 |    65.5 |              6.035 |
|       13 |     9 | 2010 |          100.3 |     10.34 |   1 |   3 |    65.5 |              6.035 |
|       13 |    12 | 2010 |           12.6 |      8.34 |   1 |   4 |    65.5 |              6.035 |
|       44 |     2 | 2010 |           27.3 |      0.18 |   2 |   1 |    43.1 | 1.9133333333333333 |
|       44 |     6 | 2010 |           74.8 |      2.11 |   2 |   2 |    43.1 | 1.9133333333333333 |
|       44 |     9 | 2010 |           27.2 |      3.45 |   2 |   3 |    43.1 | 1.9133333333333333 |
|       66 |     3 | 2010 |            6.7 |       2.1 |   3 |   1 |   36.25 | 3.3099999999999996 |
|       66 |     7 | 2010 |           65.8 |      4.52 |   3 |   2 |   36.25 | 3.3099999999999996 |
+----------+-------+------+----------------+-----------+-----+-----+---------+--------------------+
9 rows in set (0.00 sec)
 
4	Which state has coldest month and highest rainfall compared to average per year
select * from (
     select *,avg(rain_inch) over (partition by stats_id) avgrain,dense_rank() over (partition by stats_id order by temp_farenheit) ran from stats) avgr
     where rain_inch>avgrain and ran=1;
	 
mysql> select * from (
    ->      select *,avg(rain_inch) over (partition by stats_id) avgrain,dense_rank() over (partition by stats_id order by temp_farenheit) ran from stats) avgr
    ->      where rain_inch>avgrain and ran=1;
+----------+-------+------+----------------+-----------+--------------------+-----+
| Stats_ID | MONTH | YEAR | TEMP_FARENHEIT | RAIN_INCH | avgrain            | ran |
+----------+-------+------+----------------+-----------+--------------------+-----+
|       13 |    12 | 2010 |           12.6 |      8.34 |              6.035 |   1 |
|       44 |     9 | 2010 |           27.2 |      3.45 | 1.9133333333333333 |   1 |
+----------+-------+------+----------------+-----------+--------------------+-----+
2 rows in set (0.00 sec)

select * from (
     select *,avg(rain_inch) over (partition by year) avgrain,dense_rank() over (partition by stats_id order by temp_farenheit) ran from stats) avgr
     where rain_inch>avgrain and ran=1;	 
	 
mysql> select * from (
          select *,avg(rain_inch) over (partition by year) avgrain,dense_rank() over (partition by stats_id order by temp_farenheit,rain_inch desc) ran from stats) avgr
          where rain_inch>avgrain and ran=1;
+----------+-------+------+----------------+-----------+-------------------+-----+
| Stats_ID | MONTH | YEAR | TEMP_FARENHEIT | RAIN_INCH | avgrain           | ran |
+----------+-------+------+----------------+-----------+-------------------+-----+
|       13 |    12 | 2010 |           12.6 |      8.34 | 4.055555555555555 |   1 |
+----------+-------+------+----------------+-----------+-------------------+-----+
1 row in set (0.00 sec)
	
5	Which city had maximum rainfall below average . Display city, state, rainfall, average information

	
select city,state,rain_inch,avgrain from station s join (
select *,dense_rank() over (order by rain_inch desc) ran from  (
select *,avg(rain_inch) over (partition by year) avgrain from stats
     ) st  where rain_inch<avgrain )rain on s.station_id=rain.stats_id where ran=1;

mysql> select city,state,rain_inch,avgrain from station s join (
    -> select *,dense_rank() over (order by rain_inch desc) ran from  (
    -> select *,avg(rain_inch) over (partition by year) avgrain from stats
    ->      ) st  where rain_inch<avgrain )rain on s.station_id=rain.stats_id where ran=1;
+--------+-------+-----------+-------------------+
| city   | state | rain_inch | avgrain           |
+--------+-------+-----------+-------------------+
| Denver | CO    |      3.45 | 4.055555555555555 |
+--------+-------+-----------+-------------------+
1 row in set (0.00 sec)	 
	
		
	 
6	Which city had second  coldest month when compared to national average
select distinct city from (
select distinct stats_id,city,dense_rank() over (partition by stats_id order by TEMP_FARENHEIT ) rnk from station s join (
select stats_id,TEMP_FARENHEIT from stats
     where TEMP_FARENHEIT>(select avg(TEMP_FARENHEIT) from stats)
	 )a on s.station_id=a.stats_id)b where rnk=2;
	 
	mysql> select distinct city from (
    -> select distinct stats_id,city,dense_rank() over (partition by stats_id order by TEMP_FARENHEIT ) rnk from station s join (
    -> select stats_id,TEMP_FARENHEIT from stats
    ->      where TEMP_FARENHEIT>(select avg(TEMP_FARENHEIT) from stats)
    ->  )a on s.station_id=a.stats_id)b where rnk=2;
+---------+
| city    |
+---------+
| Phoenix |
+---------+
1 row in set (0.00 sec)
7	create a view based on question#3. If you query view, you should have resultset matching with question #3

8	Report stations which had temperature difference < 5 C  or difference > 20 C in subsequent quarters



 select Stats_ID,MONTH,tcel,sub from(
 select Stats_ID,MONTH,tcel,lead(tcel,1) over (partition by stats_id order by month) sub from (
select Stats_ID,MONTH,format(((TEMP_FARENHEIT-32)*5/9),2) tcel from stats)temp)temp1
where (ifnull(tcel,0)-ifnull(sub,0))<5 or (ifnull(tcel,0)-ifnull(sub,0))>20  ;
mysql> select Stats_ID,MONTH,tcel,sub from(
    ->  select Stats_ID,MONTH,tcel,lead(tcel,1) over (partition by stats_id order by month) sub from (
    -> select Stats_ID,MONTH,format(((TEMP_FARENHEIT-32)*5/9),2) tcel from stats)temp)temp1
    -> where (ifnull(tcel,0)-ifnull(sub,0))<5 or (ifnull(tcel,0)-ifnull(sub,0))>20  ;
+----------+-------+--------+--------+
| Stats_ID | MONTH | tcel   | sub    |
+----------+-------+--------+--------+
|       13 |     1 | 14.11  | 33.17  |
|       13 |     5 | 33.17  | 37.94  |
|       13 |     9 | 37.94  | -10.78 |
|       13 |    12 | -10.78 | NULL   |
|       44 |     2 | -2.61  | 23.78  |
|       44 |     6 | 23.78  | -2.67  |
|       44 |     9 | -2.67  | NULL   |
|       66 |     3 | -14.06 | 18.78  |
+----------+-------+--------+--------+
8 rows in set (0.00 sec)

select station_id,CITY,STATE,LAT_N ,LONG_W,format(((temp_farenheit-32)*5/9),2) from 
9	Report stations which obsevered temperatures less than 0(in celcius)


select distinct station_id,city,state,LAT_N,LONG_W from stats join station on stats_id=station_id
where format(((temp_farenheit-32)*5/9),2)<0;

mysql> select distinct station_id,city,state,LAT_N,LONG_W from stats join station on stats_id=station_id
    -> where format(((temp_farenheit-32)*5/9),2)<0;
+------------+---------+-------+-------+--------+
| station_id | city    | state | LAT_N | LONG_W |
+------------+---------+-------+-------+--------+
|         13 | Phoenix | AZ    |    33 |    112 |
|         44 | Denver  | CO    |    40 |    105 |
|         66 | Caribou | ME    |    47 |     68 |
+------------+---------+-------+-------+--------+
3 rows in set (0.00 sec)
format(((temp_farenheit-32)*5/9),2) temperature,format((rain_inch*03937),2) rainfall


10	Display state information and number of times when rainfall is greater than national avergae
select distinct stats_id,city,state, count(stats_id) over (partition by stats_id) from station s join (select stats_id,rain_inch from stats
     where rain_inch>(select avg(rain_inch) from stats))a on s.station_id=a.stats_id;
	 
	 
	 mysql> select distinct stats_id,city,state, count(stats_id) over (partition by stats_id) from station s join (select stats_id,rain_inch from stats
    ->      where rain_inch>(select avg(rain_inch) from stats))a on s.station_id=a.stats_id;
+----------+---------+-------+----------------------------------------------+
| stats_id | city    | state | count(stats_id) over (partition by stats_id) |
+----------+---------+-------+----------------------------------------------+
|       13 | Phoenix | AZ    |                                            3 |
|       66 | Caribou | ME    |                                            1 |
+----------+---------+-------+----------------------------------------------+
2 rows in set (0.00 sec)
